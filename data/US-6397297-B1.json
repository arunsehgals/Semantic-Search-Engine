am illustrating a serial interconnection mode of two cache modules according to an embodiment of the present invention.</p><p>FIG. 5 is a block diagram illustrating a parallel interconnection mode of two cache modules according to an embodiment of the present invention.</p><p>FIG. 6 is a block diagram illustrating a serial and parallel interconnection mode of two cache modules according to an embodiment of the present invention.</p><p>FIG. 7 is a flow diagram illustrating a method for transferring data in a serial interconnection mode of two cache modules according to an embodiment of the present invention.</p><p>FIG. 8 is a flow diagram illustrating a method for transferring data in a parallel interconnection mode of two cache modules according to an embodiment of the present invention.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DETAILED DESCRIPTION</h4><p>Embodiments of the present invention relate to an apparatus of arranging cache modules in a serial, parallel and serial/parallel interconnection mode. According to an embodiment of the present invention, a computer system having cache modules interconnected in series includes a first and a second cache module directly coupled to an address generating line for parallel lookup of data and data conversion logic coupled between the first cache module and said second cache module.</p><p>According to an alternative embodiment of the present invention, a computer system having caches interconnected in parallel includes a first and a second cache module directly coupled to an address generating line for parallel lookup of data and directly connected to a data generating line.</p><p>According to another embodiment of the present invention, a computer system having cache modules interconnected in series/parallel includes a first and a second cache module directly coupled to an address generating line for parallel lookup of data and data conversion logic coupled between the first cache module and said second cache module, wherein the first cache module is coupled to a data generating line and the second cache module is coupled to a multiplexer providing converted data from memory and from the first cache module.</p><p>The following description is presented to enable one of ordinary skill in the art to make and use the invention. Various modifications to the embodiments will be readily apparent to those skilled in the art and the generic principles herein may be applied to other embodiments. Thus, the present invention is not intended to be limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features described herein.</p><p>FIG. 3 is a block diagram illustrating the features of a typical cache module <b>50</b>. Cache module <b>50</b> includes a Tag array <b>51</b>, Hit/Miss logic <b>52</b>, Replacement logic <b>53</b>, Data array <b>54</b> and Data output selection <b>55</b>. Tag array <b>51</b> is coupled to Hit/Miss logic <b>52</b>, Replacement logic <b>53</b> and Data array <b>54</b>. Hit/Miss logic is additionally coupled to Replacement logic <b>53</b> and Data output selection <b>55</b>. Data output selection is further coupled to Data array <b>54</b>.</p><p>Cache module <b>50</b> receives an address from processor <b>12</b> (not shown) over an address generating line (address) <b>56</b>. The address is sent to Tag array <b>51</b> and Hit/Miss logic <b>52</b>. Tag array <b>51</b> stores tags associated with each cache line of cache <b>50</b>. Hit/Miss logic <b>52</b> compares the address from processor <b>12</b> with a corresponding tag array value stored in Tag array <b>51</b>. Hit/Miss logic <b>52</b> also produces a hit/miss indication as to whether the tag array value is located in Tag array <b>51</b>. If a cache hit occurs, Hit/Miss logic forwards an indication that the tag array value is located in Tag array <b>51</b> to Data output selection <b>55</b>. Data output selection <b>55</b> selects data from Data array <b>54</b> based on a decision from Hit/Miss logic <b>52</b>.</p><p>Alternatively, if Hit/Miss logic <b>52</b> forwards an indication that the tag value is not located in Tag array <b>51</b>, this indication is sent to Replacement logic <b>53</b> which determines a \u201cvictim line\u201d when this cache miss occurs. Data is supplied by memory <b>16</b> via data generating line (data-in line) <b>57</b> to Data array <b>54</b> for output.</p><p>FIG. 4 illustrates a serial interconnection mode of two cache modules according to an embodiment of the present invention. In the serial interconnection mode, cache module <b>1</b> may be a level <b>2</b> (L<b>2</b>) cache and cache module <b>2</b> may be a level <b>1</b> (L<b>1</b>) cache for example. Each cache module includes the same circuitry of cache module <b>50</b> as shown in FIG. <b>3</b>. The serial interconnected mode may be used for data types that are transformed in character between a memory image and a usage with the processor. For example, the L<b>2</b> cache may cache a memory image, and the L<b>1</b> cache may contain a cache of processor data. An example of data that could utilize this behavior is single-precision floating point data (in the L<b>2</b> cache) transformed to <b>32</b> bit integer data (in the L<b>1</b> cache).</p><p>In the serial interconnection mode, cache module <b>1</b> and cache module <b>2</b> are each directly coupled to an address generating line (address line) <b>60</b>. Address line <b>60</b> may also be coupled to processor <b>12</b>. Cache module <b>1</b> is further coupled to a data generating line (Data-In) <b>61</b> and a hit/miss generating line (hit/miss) <b>65</b>. Cache module <b>1</b> outputs data on data output line (Data-Out) <b>62</b>. Data output line <b>62</b> is coupled to a data converter <b>70</b>. Data converter <b>70</b> converts the format of data from cache module <b>1</b> to a format used by cache module <b>2</b>. The output of data converter <b>70</b> is supplied to cache module <b>2</b> via data generating line (Data-In) <b>63</b>. Cache module <b>2</b> outputs data via data output line (Data-Out) <b>64</b>. Additionally, cache module <b>2</b> sends an indication to cache module <b>1</b> via hit/miss generating line (hit/miss) <b>65</b> whether data was located in cache module <b>2</b> or not.</p><p>FIG. 7 illustrates a method for transferring data in the serial interconnection mode of two cache modules according to an embodiment of the present invention. The method begins by receiving an address from processor <b>12</b> by cache module <b>1</b> and cache module <b>2</b> for parallel look up (Step <b>700</b>). A determination is made as to whether cache module <b>2</b> stores the requested data associated with the address from processor <b>12</b> (Step <b>710</b>). If cache module <b>2</b> stores that data, the data is output and the look up in cache module <b>1</b> stops (Step <b>730</b>). Alternatively, if cache module <b>2</b> does not have the stored data, a determination is made as to whether cache module <b>1</b> stores the data (Step <b>720</b>). If cache module <b>1</b> stores the data, the data is first converted from a format used by cache module <b>1</b> to a format used by cache module <b>2</b> (Step <b>750</b>) and then the converted data is moved from cache module <b>1</b> to cache module <b>2</b> for output (Step <b>760</b>). If, however, the data is not stored in cache module <b>1</b>, the data is loaded from memory into cache module <b>1</b> (Step <b>740</b>), converted (Step <b>750</b>) and moved to cache module <b>2</b> for output (Step <b>760</b>).</p><p>FIG. 5 illustrates a parallel interconnection mode of two caches according to an embodiment of the present invention. In the parallel interconnection mode, cache module <b>1</b> and cache module <b>2</b> may be the same type of cache module (e.g., L<b>1</b> or L<b>2</b> caches) and are interconnected in parallel as a single large cache module.</p><p>In the parallel interconnection mode, cache module <b>1</b> and cache module <b>2</b> are each directly coupled to an address generating line (address line) <b>60</b>. Address line <b>60</b> may also be coupled to processor <b>12</b>. Cache module <b>1</b> and cache module <b>2</b> are also each directly coupled to a data generating line (Data-In) <b>61</b>. Data generating line <b>61</b> may also be coupled to memory <b>16</b>. Hit/Miss generating line <b>65</b> is coupled between cache module <b>1</b> and cache module <b>2</b> for use with simultaneous look up of requested data in order to know the status of the other cache module. Cache module <b>1</b> and cache module <b>2</b> output data via data output lines (Data-Out) <b>62</b> and <b>64</b> respectively. A multiplexer <b>200</b> is used to output data from either cache module <b>1</b> or cache module <b>2</b>. Also includes is a select victim unit <b>72</b> which determine which cache module to use if to retrieve data from memory in the situation where neither cache module has the data. Select victim unit <b>72</b> can for example, alternate between the cache modules in assigning the cache module to retrieve data from memory or can use any other method of assigning a cache module to retrieve data known in the art.</p><p>FIG. 8 illustrates a method for transferring data in the parallel interconnection mode of two caches according to an embodiment of the present invention. The method begins by receiving an address from processor <b>12</b> by cache module <b>1</b> and cache module <b>2</b> for parallel look up (Step <b>800</b>). A determination is made as to whether the data is in either cache module (Step <b>810</b>). If the data is in at least one of the cache modules, the data is output by that cache module and the look up for the other cache is canceled (Step <b>830</b>). Alternatively, if neither cache module has the data, a selection is made using select victim unit <b>72</b> to load data from memory by one of the cache modules and cancel the lookup for the other cache module (Step <b>820</b>).</p><p>FIG. 6 illustrates a serial/parallel interconnection mode of two cache modules according to an embodiment of the present invention. In the serial/parallel interconnection mode, cache module <b>1</b> may be a level <b>2</b> (L<b>2</b>) cache, and cache module <b>2</b> may be 