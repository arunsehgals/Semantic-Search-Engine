espond to the cache memory CACHE or the main memory MM and do not exist in the central processing unit CPU. The central processing unit CPU executes the instruction of the instruction system of the 2-byte fixed length instruction, and the arithmetic unit 90 <br/> Reference numerals 2 and 903 each have a 32-bit ALU or the like. The register file 802 has 16 general-purpose registers having a 32-bit length. That is, the central processing unit CPU executes the instructions of the 2-byte / 2-operand instruction system (instruction set) described in Japanese Patent Laid-Open No. 5-197546. The CPU described in JP-A-5-197546 is not a superscalar system. On the other hand, the central processing unit CPU is a superscalar system, and the central processing unit CPU can execute the same command system as the command system described in the application number 1992/897457. Therefore, <br/> High-speed performance can be achieved while maintaining compatibility with existing software (object code compatibility). Also, <br/> The high code efficiency, which is a characteristic of 2-byte fixed length instructions, can be maintained.</p><p num=\"0104\">Although the invention made by the present inventor has been specifically described based on the embodiments, the present invention is not limited to the embodiments and various modifications can be made without departing from the scope of the invention. There is no end. For example, <br/> In the embodiment shown in FIG. 6 and the following, the case of the 2-byte / 2-operand instruction system has been described, but it is also applicable to the case of the 4-byte / 3-operand instruction system. Although the 0 extension instruction and the 0 extension operation instruction have been described, the same can be applied to the sign extension instruction and the sign extension operation instruction. Further, although the case where the register is specified in the S1 field of the transfer instruction of the first instruction has been described, the case where the S1 field is immediate data can be applied.</p><p num=\"0105\">[0105]</p><p>The effects obtained by typical ones of the inventions disclosed in the present application will be briefly described as follows.</p><p num=\"0106\">The instructions can be executed in parallel by detecting the data flow between adjacent instructions and converting the instructions. Therefore, it is possible to execute a plurality of instruction processes in one clock, which conventionally takes a plurality of clocks. Thereby, <br/> The number of execution clocks as a whole can be reduced.</p><h4>[Brief description of drawings]</h4><p>FIG. 1 illustrates a pipelined implementation of a microprocessor.</p><p>FIG. 2 shows a concept of pipeline processing.</p><p>FIG. 3 shows the concept of superscalar processing.</p><p>FIG. 4 shows an example of an instruction format and an instruction repertoire of a 4-byte instruction system.</p><p>FIG. 5 shows an example of a command format and a command repertoire of a 2-byte command system.</p><p>FIG. 6 is a diagram showing a data path of a pipeline of a microprocessor according to an embodiment of the present invention.</p><p>FIG. 7 is a detailed block diagram of a first stage and a first latch group.</p><p>FIG. 8 is a detailed block diagram of a second stage and a second latch group.</p><p>FIG. 9 is a detailed block diagram of a third stage and a third latch group.</p><p>FIG. 10 is a block diagram illustrating the operation of the fourth stage.</p><p>FIG. 11 shows rules for converting two instructions in the instruction decode stage into two instructions in the operation stage.</p><p>FIG. 12 shows a detailed block diagram of a part of a decoding control unit.</p><p>FIG. 13 shows how an instruction sequence is processed with individual clocks.</p><p>FIG. 14 is a diagram of a microcomputer system using the superscalar system of the present invention.</p><p>FIG. 15 is a block diagram of a 