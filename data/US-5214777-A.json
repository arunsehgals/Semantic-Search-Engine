ta words in said second cache register along with all of the noncorresponding first data words in said first cache register.</claim-text></claim-text></claim>"}, {"num": 17, "parent": -1, "type": "independent", "paragraph_markup": "<claim num=\"17\"><claim-text>17. A method for overwriting discrete first data words in a memory by sequentially presented corresponding second data words, wherein each addressable location in said memory holds a data element with N data words, comprising:<claim-text>a. checking a first cache register for the data element including the corresponding first data word to a second data word to be written into said memory;</claim-text><claim-text>b. if the data element is in said first cache register, writing said second data word to a second cache register, but if the data element is not in said first cache register, going to step d;</claim-text><claim-text>c. repeating steps a and b;</claim-text><claim-text>d. checking said second register for the presence of second data words;</claim-text><claim-text>e. if said second data register contains second words, writing into said main memory all second data words in said second cache register along with all of the noncorresponding words in said first cache register, but if said second data register does not contain second words, going to step g;</claim-text><claim-text>f. resetting said second cache register;</claim-text><claim-text>g. transferring the data element which includes the corresponding first data word from said memory into said first cache register; and</claim-text><claim-text>h. writing said second data word to said second cache register simultaneously with step g.</claim-text></claim-text></claim>"}, {"num": 18, "parent": 17, "type": "dependent", "paragraph_markup": "<claim num=\"18\"><claim-text>18. The method of claim 17 further comprising:<claim-text>repeating steps a through e.</claim-text></claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES66303433\"><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><p>The present invention relates to data processing systems. More particularly, it relates to memory systems with an addressable memory element size greater than the modifiable memory word size.</p><h4>BACKGROUND OF THE INVENTION</h4><p>Memories used in data processing systems are accessed for both read and write operations. Every data element stored in memory has a unique address associated therewith. The size or length of the addressable data element may vary from a single bit (bit addressable) to multiple bytes. In bit addressable memories, any single bit may be read from and/or written into the memory. However, for most memory systems one or more bytes are stored at each address and are accessed for each read/write operation.</p><p>Data elements accessed are not always of a length which is consistent with the performance of various other devices and operations within the data processing system. For example, data variables and data instructions may encompass several adjacent memory locations or, alternatively, may require fewer bits than in a full data element. Another example involves the accessing of a memory where the number of bits on a bus is less than the data element length. A data bus might be one byte (eight bits) wide, whereas the data element in the memory might be four bytes (thirty-two bits) wide.</p><p>For data memory systems where a word is to be overwritten into a memory having addressable data elements of more than a word, a read/modify/write operation is typically performed. Since the data word cannot be written directly into the memory, the data element having the proper address is first read into a register. The data element is then modified by overwriting the new word into the correct location within the data element. The modified data element is then written back into memory to complete the operation. The conventional read/modify/write operation has a problem which tends to slow down the operation and can have a negative impact on the overall performance of the data processing system. A read/modify/write operation requires three clock cycles, one cycle each to read, modify and write the data element into the memory. In contrast, a standard write operation to a memory, where the word to be written is the same, size as stored data elements within the memory, can be accomplished in one clock cycle.</p><h4>OBJECTS OF THE INVENTION</h4><p>It is therefore an object of the present invention to provide a new and improved memory system for a data processing system.</p><p>It is another object of the present invention to provide a new and improved read/modify/write memory system.</p><p>It is a further object of the present invention to provide a high speed read/modify/write memory system.</p><p>It is yet another object of the present invention to provide a new and improved method for overwriting a data word in a memory having addressable data elements of more than a word.</p><h4>SUMMARY OF THE INVENTION</h4><p>One form of the present invention is an improvement for a data processing system. The improvement comprises a memory for storing data elements, a first cache register connected to the memory, and a second cache register connected in parallel with the first cache register. Each data element has a unique address and includes N data words. The first register receives from the memory a single data element to be modified. The second register receives one or more data words to replace corresponding data words in the single data element. The improvement further comprises means for transferring to the memory the data words from the second cache register together with noncorresponding data words from the first cache register.</p><p>Another form of the present invention is a method for overwriting a first data word in a memory by a second data word, wherein each addressable location in the memory holds a data element with N data words. The method comprises reading the data element which includes the first data word from the memory into a first cache register, simultaneously writing the second data word to a second cache register, and then writing into the main memory the second data word along with all of the words of the data element in the first cache register save the first word.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>The FIGURE is a schematic drawing of a high speed read/modify/write system according to one form of the present invention.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DESCRIPTION OF A PREFERRED EMBODIMENT</h4><p>The FIGURE shows a memory system 10 for a data processing system. A memory 12 stores data elements 14. For purposes of the invention, memory 12 could be a cache memory or slower main memory. Each data element 14 has a unique address and consists of N data words. The term \"data word\" as used herein is intended to encompass one or more data bits, the number of bits in the word being less than the number of bits in a data element. Addressing of a specific data element 14 in memory 12 is provided by means of address bus 16.</p><p>A cache register 18 for holding a single data element 14 is connected to memory 12 by N conduction lines 20. Cache register 18 has N storage cells, labeled 1, 2, . . . , N. Each cell stores respective words of a data element 14. Each cell in register 18 has a location therein which corresponds to the relative position of data words of element 14 as stored in memory 12. Restated, there is a one-to-one correspondence between data words 1, 2, . . . , N of each data element 14 stored in memory 12 and data cells 1, 2, . . . , N in cache register 18. The number of physical conductors in each line 20 depends on the number of bits in each data word of data element 14. For example, if each word consists of just one bit, each conduction line 20 will include one conductor. If each word consists of one byte (eight bits), each conduction line 20 will have at least eight conductors.</p><p>A cache register 22 is connected in parallel with register 18. Cache register 22 has N storage cells, labeled 1, 2, . . . , N, for storing data words. Each cell corresponds to a respective cell in register 18. N conduction lines 24 connect register 22 with respective ones of conduction lines 20. Each conduction line 24 will have the same number of physical conductors as respective conduction lines 20. In a preferred embodiment, each storage cell in registers 18 and 22 include the same number of data bits.</p><p>A multiplexer 26 conveys data words to and from memory 12. Multiplexer 26 is located between a data bus 28 and cache registers 18 and 22. N conduction lines 30 connect multiplexer 26 with register 22. Another N conduction lines 32 connect register 18 with respective ones of conduction lines 30. Each conduction line 30 and 32 will have enough conductors to handle the number of data bits in a data word. Although the invention will work with a data bus 28 of any number of conductors, it is particularly adapted in a preferred embodiment to work with a data bus 28 of a single data word wide.</p><p>Control lines 34 and 36 are connected to each register 18 and 22, respectively. These will carry control signals to enable the output of specific cells in each register by selecting and activating conduction lines. Each cell in cache register 22 includes a flag bit which indicates the presence of a data word in that particular cell. As will be discussed more fully hereinafter, control line 36 responds to the presence of a flag bit to enable the output of that cell. Control line 34 responds to the presence of flag bits in register 22 by enabling the output of the noncorresponding cells in register 18.</p><p>In order to keep track of the address of the data element in register 18, a latch 38 and comparator 40 are provided. Latch 38 is connected between address bus 16 and memory 12. In a preferred embodiment latch 38 includes a plurality of clocked flip-flops, one for each line in address bus 16. A control signal, for clocking in an address on bus 16, is received at the CK inputs to the flip-flops from a control line 42. Comparator 40 receives the address stored in latch 38 and the address on bus 16 and provides an output control signal indicating whether or not there is a correspondence between the addresses.</p><p>In operation, the subject invention allows individual data words in memory 12 to be overwritten with data words received from data bus 28 with minimum delays. In brief, when a data word (hereinafter referred to as the second data word) is to be written into memory 12, the data element 14 which includes the data word to be overwritten (hereinafter referred to as the first data word) is read from memory 12 into cache register 18. At the same time, the second data word is written from data bus 28 into cache register 22. The second data word will be directed to the cell in register 22 that corresponds to the cell in register 18 receiving the first data word. By simultaneously reading data element 14 into register 18 with the writing of the second data word into register 22, the \"read latency\" inherent in prior art read/modify/write memory systems is eliminated. A single write operation to memory 12 may then be performed by writing the second data word from register 22 along with all of the words of the data element in register 18 save the first data word. In other words, the data element is modified by the substitution of one data word for another.</p><p>Consecutive data words written into memory 12 are frequently located at adjacent memory locations. For example, if a second data word is to overwrite data word 1 in data element 14, it is likely that the next data word will overwrite data word 2 in element 14. Thus, according to one form of the present invention, the data element in register 18 with replacement data word in register 22 is not immediately written back to memory 12 after the second data word is written into register 22. Rather, the system must wait until a next data word is to be written into memory 12. At such time, cache register 18 is first checked for the presence of the data element to be modified. More specifically, register 18 is checked for the data element having a first data word corresponding to (having the same address as) the next data word. Data register 18 is checked by means of comparator 40. When the address of the next data word to be written into memory 12 is placed on address bus 16, it is compared with the address stored in latch 38 (the address of the data element currently in register 18). If it is determined that the desired data element is already in register 18 by the indication of a \"hit\", a control signal on line 36 will be sent to register 22 to enable the next data word to be written into register 22. For each succeeding word to be written to memory, register 18 is first checked by means of comparator 40 to determine the presence of the data element to be modified. Since it frequently happens that sequentially presented data words will be stored in adjacent locations in memory, many write and read operations with respect to memory 12 are thereby eliminated.</p><p>Comparator 40 will indicate when the address on bus 16 and in latch 38 are not the same. At such time, since the correct data element is not in register 18, any second data words in register 22 must now be written into memory 12. As noted previously, each cell in register 22 has a flag bit associated therewith which is set when a word is written to it. These flag bits are checked, and the corresponding conduction line 24 is enabled for any cell having such a flag. At the same time the conduction lines 20 for the noncorresponding words in register 18 are enabled. In this manner the data element in register 18 is written back into memory 12 save for the overwriting of second data words. Cache register 22 is reset after the write operation to prepare it for receiving the next data word.</p><p>As soon as any second data words in register 22 have been written to memory 12, latch 38 is enabled to store therein the address which is on bus 16. Memory 12 is then addressed and the data element having the correct data word corresponding to the next data word to be wri