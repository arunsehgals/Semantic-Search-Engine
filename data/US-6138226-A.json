 assigned to the logical address b with the share flag SH of the entry being 1, a procedure below is to be followed without the addition of a new entry. Namely, the logical address b as a search address of the cache memory is subjected to address translation by means of TLB to obtain its physical address information PA(b). Further, the logical page information VA(a) of the tag selected then is used for address translation by means of TLB likewise to obtain physical address information PA(a). When a comparison of both bits of physical address information results in a good match, that is PA(a)=PA(b), this means that the logical address b shares data with the logical address a and the cache entry is processed as a cache hit. Consequently, a plurality of data are prevented from existing at the same physical address in the logical cache memory and the problem of the synonym can thus be solved.</p><p>Incidentally, Japanese Unexamined Patent Publication No. 302444/1989 discloses the art of subjecting to address translation two logical addresses in the tag portion of the cache as well as a search address when the reading of the cache memory has proved the presence of shared data, and comparing both so as to deal with a cache hit on condition that the result of the comparison is proved to be conformity.</p><h4>SUMMARY OF THE INVENTION</h4><p>The present inventors found that the measures taken to cope with synonyms when the aforementioned cache memory was employed still remained unsatisfactory to solve the problem of increased power consumption because TLB had to be accessed twice.</p><p>With respect to power consumption resulting from gaining access to TLB, moreover, TLB has to be accessed to translate the logical address into a physical address even at the time of a cache write hit and the present inventors proved the fact that the amount of power consumption was also increased thereby.</p><p>An object of the present invention is to provide a data processor capable of decreasing the number of times access is provided to TLB, which is essential to deal with the problem of a synonym.</p><p>Another object of the present invention is to provide a data processor which allows the omission of gaining access to TLB at the time of a cache write hit.</p><p>Still another object of the present invention is to provide a data processor designed to make power consumption reducible at the time TLB is accessed.</p><p>These and other objects and novel features of the present invention will become more apparent by referring to the following description and appended drawings.</p><p>A brief description will subsequently be given of an exemplary embodiment of the invention as disclosed in the present application for a patent.</p><p>(1) A data processor comprises a logical cache memory (10) with logical address information as search information, a translation lookaside buffer (11) for storing a translation pair for translating a logical address into a physical address, and control means for controlling the logical cache memory and the translation lookaside buffer, the logical cache memory having an area for use in retaining physical address information corresponding to the logical address information (physical page information PA in the data portion of a cache entry as shown in FIG. 9).</p><p>In a case where a desired logical address shares a physical address space with the other logical addresses when the cache entry selected by the search information (e.g., part of the offset data assigned to the logical address) from the logical cache memory does not correspond to the desired logical address, the control means compares the physical address information (e.g., physical page information PA) retained by the cache entry thus selected with the physical address information obtained from the translation lookaside buffer, and renders utilizable the information retained by the cache entry thus selected on condition that the result of the comparison is proved to be conformity.</p><p>(2) From another viewpoint of utilizing physical address information such as the physical page information contained in the cache entry, control means makes the physical address retained by the cache entry thus selected utilizable for the generation of a physical address to be written into a physical address space when the cache entry selected by search information corresponds to the desired logical address.</p><p>(3) The control means for controlling both the aforementioned comprises cache address comparator means (202) for detecting that the cache entry selected by the search information from the cache memory does not correspond to a desired logical address and that the desired logical address shares a physical address space with the other logical addresses, physical address comparator means (204) for comparing the physical address information retained by the cache entry thus selected with physical address information obtainable from the translation lookaside buffer to detect conformity therebetween on the basis of the detections made by the cache address comparator means, a data controller (301) for utilizing the information retained by the cache entry thus selected when the result of comparison made by the physical address comparator means is proved to be conformity, and an address controller (300) for utilizing the physical address retained by the cache entry thus selected for the generation of a physical address to be written into the physical address space when the cache entry selected by the search information from the logical cache memory corresponds to the desired logical address in write processing.</p><p>(4) In consideration of a case where an address translation mechanism supports variable page size, a translation lookaside buffer in a full-associative form may be used as another translation lookaside buffer in place of the aforesaid translation lookaside buffer when the logical page size is altered.</p><p>When a cache miss occurs in a case where information such as the physical page information PA corresponding to the logical page information VA as a cache tag address is stored in the logical cache memory 10 to gain access to a shared area, the physical page information PA retained by the logical cache memory is compared with the physical page information PA translated from the search address in the translation lookaside buffer so as to process the cache entry as a cache hit on condition that the result of the comparison is proved to be conformity, whereby the problem of a synonym arising from a case where the same physical address is assigned to different logical addresses is solved in such a manner that the number of times access is provided to the translation lookaside buffer is halved.</p><p>At the time of a cache write hit with respect to the translation lookaside buffer, it is not necessary at all to gain access to the translation lookaside buffer at the time of the cache write hit in the case of generating a physical address for external write access by means of the physical page information PA in the cache entry relating to that hit.</p><p>The use of the logical cache memory not only makes power consumption reducible but also renders access to the translation lookaside buffer omissible at the time of the cache hit. For this reason, moreover, the overall power consumption intended for access to the translation lookaside buffer also becomes reducible as it is needed to gain access to the translation lookaside buffer only at the time of the substantial cache miss.</p><p>When the address translation mechanism supports the variable page size, the technique of gaining access to the translation lookaside buffer employing a set-associative form will have to be varied with the page size. In such a case, there are provided one translation lookaside buffer in the set-associative form corresponding to the typical page size and another translation lookaside buffer in the full-associative form; the former translation lookaside buffer is used in the case of such a typical page size, whereas the latter translation lookaside buffer is used for other page sizes.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>FIG. 1 is a conceptual diagram illustrating the technique of controlling a logical cache memory to solve the problem of a synonym in a data processor according to the present invention.</p><p>FIG. 2 is a conceptual diagram illustrating the technique of controlling the logical cache memory to solve the problem of a synonym without any physical address included in a cache entry.</p><p>FIG. 3 is a diagram illustrating a multiple physical address space.</p><p>FIG. 4A is a format chart showing an example of a logical address extended by an address space identifier; and FIG. 4B a format chart showing an example of a cache entry with a share flag.</p><p>FIG. 5 is a diagram illustrating the concept of a synonym.</p><p>FIGS. 6A and 6B are diagrams illustrating the problem of a synonym in the logical cache memory.</p><p>FIG. 7 is a block diagram of a microcomputer as a data processor embodying the present invention.</p><p>FIG. 8 shows an example of a format of entry in TLB.</p><p>FIG. 9 shows an example of a format of entry in the logical cache memory.</p><p>FIG. 10 is a block diagram illustrating in detail the logical cache memory, TLB and the control unit shown in FIG. 7.</p><p>FIG. 11 is an overall control flowchart of the logical cache memory.</p><p>FIG. 12 is an operation control flowchart of the logical cache memory in cases of cache read/write hits.</p><p>FIG. 13 is an operation control flowchart of the logical cache memory in the event of a cache read miss.</p><p>FIG. 14 is an operation control flowchart of the logical cache memory in the event of a cache write miss.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DESCRIPTION OF THE PREFERRED EMBODIMENTS</h4><p>FIG. 7 is a block diagram of a microcomputer as a data processor embodying the present invention. A microcomputer (or microprocessor) 1 contains, not exclusively, a logical cache memory 10, a translation lookaside buffer 11 (hereinafter simply called \"TLB\" too)), a control unit 12, and peripheral modules 13, these being coupled to internal buses 14, 15, for example, and formed on one semiconductor substrate (or chip ) made of silicon.</p><p>The control unit 12 is a circuit block which generally functions as control circuits for controlling a central processing unit, a bus controller, the logical cache memory 10 and the TLB 11 above and further as an external interface circuit. In FIG. 7, there are exemplarily shown an internal controller 121 and an external bus controller 122 in the circuit block functioning as an input-output control unit relative to the inside and outside of the chip. The logical cache memory 10, the TLB 11 and the internal controller 121 are connected to the internal bus 14, whereas the TLB 11, the peripheral modules 13 and the external bus controller 122 are connected to the internal bus 15. The peripheral modules 13 properly include the following peripheral circuits (not shown): a timer, a serial interface communication interface, RAM (Random Access Memory), ROM (Read Only Memory), and DMAC (Direct Memory Access Controller). In FIG. 7, reference numeral 16 denotes a group of control signal lines with respect to the logical cache memory 10; 17, a group of control signal lines with respect to the TLB 11; 18, a group of control signal lines between the TLB 11 and the peripheral modules 13; 19, a group of control signal lines with respect to the peripheral modules 13; and 20, a group of control signal lines between the logical cache memory 10 and the TLB 11. The microcomputer 1 in this embodiment of the invention is connected via, but not limited to, an external bus 3 to a main memory 2. In this embodiment of the invention, the TLB 11 and the circuits in the control unit 12 for controlling the former constitute an address translation mechanism for realizing virtual memory.</p><p>FIG. 8 shows an example of a format of entry in TLB 11. One entry contains a logical and a physical address portion.</p><p>The logical address portion has a valid bit V (1 bit) indicating that the entry is valid, an address space identifier (an identification number) ASID (8 bits) and logical page information VA (20 bits).</p><p>The physical address portion has a protection PR (2 bits) for memory protection, physical page information PA (20 bits) corresponding to the physical page in the logical address portion and a share flag SH (1 bit) indicating whether the physical page designated by the physical page information is shared among a plurality of physical pages.</p><p>In accordance with this embodiment of the invention, the logical page information and offset information in the logical page specified by the logical page information constitute the logical address. The size of one logical page is determined by the number of bits of the offset information. The logical page size is assumed constant in this embodiment of the invention. When a logical address is translated into a physical address, physical page information is obtained from an entry corresponding to the logical page information of the logical address, and the logical address is made available by concatenating the offset information of the logical address on the low order side of the physical page information.</p><p>FIG. 9 shows an example of a format of entry in the logical cache memory 10. One entry contains an address and a data portion.</p><p>The address portion is the same as the logical address portion of the TLB 11 and retains a valid bit V (1 bit) indicating that the entry is valid, an address space identifier ASID (8 bits) and logical page information VA (20 bits).</p><p>The data portion is formed by concatenating 16-byte data to the physical address portion of the TLB 11 and additionally retains a protection PR (2 bits) for memory protection, a share flag SH (1 bit) indicating whether logical page shares data with other logical pages, physical page information PA (20 bits) corresponding to the logical page in the address portion.</p><p>What demands special attention in this case is that though the concept of the address space identifier together with the share flag has been adopted in the logical cache memory 10 and the TLB 11, the logical cache memory 10 possesses the physical page information PA so as to decrease the number of times access is provided to TLB. The physical page information PA stored in the data portion of a cache entry is made available via the TLB 11 when an entry is initially registered in the logical cache memory 10 because of a cache miss, for example.</p><p>In FIG. 1, there is shown a conceptual diagram illustrating the technique of controlling the logical cache memory 10 to solve the problem of a synonym as noted above. In an exemplary cache entry of FIG. 1, VA(a) represents logical page information like a logical page number corresponding to a logical address a and so does PA(a) the physical page information assigned to a physical address corresponding to the logical address a. When a logical address b (VA(b) represents its logical page information) is accessed in that state and when the entry selected thereby is a cache miss, that is, when the tag VA(a) of the entry thus selected does not conforms to the logical page information VA(b) assigned to the logical address b with the share flag SH of the entry being 1, a procedure below is followed without the addition of a new entry. Namely, the logical address b as a search address of the cache memory 10 is subjected to address translation by means of the TLB 11 to obtain its physical address information PA